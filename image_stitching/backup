def matcher(des1, des2):
    '''
    @brief: matching descriptor vectors and finding good match as per Lowe's ratio
    @args[in]: 
        des1: descriptor from image 1
        des1: descriptor from image 2
    @args[out]: good matches
    '''
    # match descriptor vectors with a FLANN based matcher
    matcher = cv2.DescriptorMatcher_create(cv2.DescriptorMatcher_FLANNBASED)
    matches = matcher.knnMatch(des1, des2, 2)
    # find good matches as per Lowe's ratio test.
    good_matches = []
    for m, n in matches:
        if m.distance < 0.7*n.distance:
            good_matches.append(m)
    if len(good_matches) < params.MIN_MATCH_COUNT:
        print("Not enough matches are found - {}/{}".format(len(good_matches),
                                                            params.MIN_MATCH_COUNT))
        return None
    return good_matches
